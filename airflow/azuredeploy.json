{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "siteName": {
        "type": "string",
        "defaultValue": "[concat('airflow-', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of Airflow web app"
        }
      },
      "servicePlanTier": {
        "type": "string",
        "allowedValues": [
          "Standard",
          "Premium",
          "PremiumV2"
        ],
        "defaultValue": "PremiumV2",
        "metadata": {
          "description": "Tier for Service Plan"
        }
      },
      "servicePlanSku": {
        "type": "string",
        "allowedValues": [
          "S1",
          "S2",
          "S3",
          "P1",
          "P2",
          "P3",
          "P1V2",
          "P2V2",
          "P3V3"
        ],
        "defaultValue": "P1V2",
        "metadata": {
          "description": "Size for Service Plan"
        }
      },
      "administratorLogin": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "Database administrator login name"
        }
      },
      "administratorLoginPassword": {
        "type": "securestring",
        "minLength": 8,
        "maxLength": 128,
        "metadata": {
          "description": "Database administrator password"
        }
      },
      "databaseSkuCapacity": {
        "type": "int",
        "defaultValue": 2,
        "allowedValues": [
          2,
          4,
          8,
          16,
          32
        ],
        "metadata": {
          "description": "Azure database for PostgreSQL compute capacity in vCores (2,4,8,16,32)"
        }
      },
      "databaseSkuName": {
        "type": "string",
        "defaultValue": "GP_Gen5_2",
        "allowedValues": [
          "B_Gen5_1",
          "B_Gen5_2",
          "GP_Gen5_2",
          "GP_Gen5_4",
          "GP_Gen5_8",
          "GP_Gen5_16",
          "GP_Gen5_32",
          "MO_Gen5_2",
          "MO_Gen5_4",
          "MO_Gen5_8",
          "MO_Gen5_16",
          "MO_Gen5_32"
        ],
        "metadata": {
          "description": "Azure database for PostgreSQL sku name "
        }
      },
      "databaseSkuSizeMB": {
        "type": "int",
        "allowedValues": [
          102400,
          51200
        ],
        "defaultValue": 51200,
        "metadata": {
          "description": "Azure database for PostgreSQL Sku Size "
        }
      },
      "databaseSkuTier": {
        "type": "string",
        "defaultValue": "GeneralPurpose",
        "allowedValues": [
          "Basic",
          "GeneralPurpose",
          "MemoryOptimized"
        ],
        "metadata": {
          "description": "Azure database for PostgreSQL pricing tier"
        }
      },
      "postgresqlVersion": {
        "type": "string",
        "allowedValues": [
          "9.5",
          "9.6"
        ],
        "defaultValue": "9.6",
        "metadata": {
          "description": "PostgreSQL version"
        }
      },
      "databaseSkuFamily": {
        "type": "string",
        "defaultValue": "Gen5",
        "metadata": {
          "description": "Azure database for PostgreSQL sku family"
        }
      },
    "redisCacheSKU": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
            "Basic",
            "Standard",
            "Premium"
        ],
        "metadata": {
            "description": "Specify the pricing tier of the new Azure Redis Cache."
        }
    },
    "redisCacheFamily": {
        "type": "string",
        "defaultValue": "C",
        "allowedValues": [
            "C",
            "P"
        ],
        "metadata": {
            "description": "Specify the family for the sku. C = Basic/Standard, P = Premium."
        }
    },
    "redisCacheCapacity": {
        "type": "int",
        "defaultValue": 1,
        "allowedValues": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
        ],
        "metadata": {
            "description": "Specify the size of the new Azure Redis Cache instance. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
        }
    },
    "enableNonSslPort": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
            "description": "Specify a boolean value that indicates whether to allow access via non-SSL ports."
        }
    },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all the resources."
        }
      }
    },
    "variables": {
      "databaseName": "airflowdb",
      "serverName": "[concat(parameters('siteName'), 'pgserver')]",
      "redisName": "[concat(parameters('siteName'), 'redis')]",
      "AirflowUserName": "[concat(parameters('administratorLogin'),'@',variables('serverName'))]",
      "hostingPlanName": "[concat(parameters('siteName'), 'serviceplan')]"
    },
    "resources": [
      {
        "comments": "This is the Airflow Linux web app running puckel/docker-airflow Docker image",
        "type": "Microsoft.Web/sites",
        "name": "[parameters('siteName')]",
        "apiVersion": "2018-02-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('databaseName')]",
          "[concat('Microsoft.Web/serverFarms/', variables('hostingPlanName'))]",
          "[concat('Microsoft.Cache/Redis/', variables('redisName'))]"
        ],
        "properties": {
          "siteConfig": {
            "linuxFxVersion": "DOCKER|apache/airflow:latest"
          },
          "name": "[parameters('siteName')]",
          "serverFarmId": "[variables('hostingPlanName')]",
          "hostingEnvironment": ""
        },
        "resources": [
          {
            "name": "appsettings",
            "type": "config",
            "apiVersion": "2018-02-01",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
            ],
            "tags": {
              "displayName": "AirflowappSettings"
            },
            "comments": "This are the generated settings for the Airflow SQL Alchemy connectionstring",
            "properties": {
              "AIRFLOW__CORE__SQL_ALCHEMY_CONN": "[concat('postgresql://', variables('AirflowUserName'),':',parameters('administratorLoginPassword'),'@',reference(resourceId('Microsoft.DBforPostgreSQL/servers',variables('serverName'))).fullyQualifiedDomainName,':5432/',variables('databaseName'))]",
              "AIRFLOW__CORE__LOAD_EXAMPLES": "true",
              "AIRFLOW__CELERY__BROKER_URL": "[concat(variables('redisName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisName')), '2015-08-01').primaryKey)]",
              "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "true"
            }
          }
        ]
      },
      {
        "apiVersion": "2018-02-01",
        "name": "[variables('hostingPlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[parameters('location')]",
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "workerSizeId": "1",
          "reserved": true,
          "numberOfWorkers": "1",
          "hostingEnvironment": ""
        },
        "sku": {
          "Tier": "[parameters('servicePlanTier')]",
          "Name": "[parameters('servicePlanSku')]"
        },
        "kind": "linux"
      },
      {
        "apiVersion": "2017-12-01",
        "type": "Microsoft.DBforPostgreSQL/servers",
        "location": "[parameters('location')]",
        "name": "[variables('serverName')]",
        "sku": {
          "name": "[parameters('databaseSkuName')]",
          "tier": "[parameters('databaseSkuTier')]",
          "capacity": "[parameters('databaseSkuCapacity')]",
          "size": "[parameters('databaseSkuSizeMB')]",
          "family": "[parameters('databaseSkuFamily')]"
        },
        "properties": {
          "version": "[parameters('postgresqlVersion')]",
          "administratorLogin": "[parameters('administratorLogin')]",
          "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
          "storageMB": "[parameters('databaseSkuSizeMB')]",
          "createMode": "Default"
        },
        "resources": [
          {
            "type": "firewallrules",
            "apiVersion": "2017-12-01",
            "dependsOn": [
              "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
            ],
            "location": "[parameters('location')]",
            "name": "[concat(variables('serverName'),'firewall')]",
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "255.255.255.255"
            }
          },
          {
            "name": "[variables('databaseName')]",
            "type": "databases",
            "apiVersion": "2017-12-01",
            "properties": {
              "charset": "utf8",
              "collation": "English_United States.1252"
            },
            "dependsOn": [
              "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
            ]
          }
        ]
      },
      {
          "apiVersion": "2017-10-01",
          "type": "Microsoft.Cache/Redis",
          "location": "[parameters('location')]",
          "name": "[variables('redisName')]",
          "properties": {
                "enableNonSslPort": "[parameters('enableNonSslPort')]",
                "minimumTlsVersion": "1.2",
                "sku": {
                    "capacity": "[parameters('redisCacheCapacity')]",
                    "family": "[parameters('redisCacheFamily')]",
                    "name": "[parameters('redisCacheSKU')]"
                }
            }

      }
    ]
  }